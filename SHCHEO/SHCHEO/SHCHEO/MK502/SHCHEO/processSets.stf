FUNCTION processSets
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Name            Data Type      Dimension            Direction  Attribute       Comment                             *)
(* ------------------------------------------------------------------------------------------------------------------ *)
(* processSets    DINT                                VarOutput  Write           Результат выполнения функции *)
(* iSets           typSets                             Var        Read/Write      Рабочий объект *)
(* i               DINT                                Var        Read/Write      Счётчик *)
(* _bRes           BOOL                                Var        Read/Write      Результат функции BOOL *)
(* _dRes           DINT                                Var        Read/Write      Результат функции DINT *)
(* ------------------------------------------------------------------------------------------------------------------ *)
processSets:= sSets.iSize;
if sSets.iSize>sSets.iMax then processSets:= -sSets.iSize; return; end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Проход по всем параметрам *)
i:= 1;   while i<=sSets.iSize do
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Отключение резевных объектов *)
if not dSets[i].nLogicNot then
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Передача в Рабочий объект *)
  iSets:= dSets[i];
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Начало логики *)
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Имена файлов и максимальное количество объектов *)
  _sObj_iMin:= 1;
  case i of
  	 1:    _fileName:= 'rubbish.dat';     _sObj_iMax:= 1;     _sObj_iSize:=     1;
     2:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Ana.dat';     _sObj_iMax:= sAna.iMax;     _sObj_iSize:=     sAna.iSize;
     3:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Dsc.dat';     _sObj_iMax:= sDsc.iMax;     _sObj_iSize:=     sDsc.iSize;
	 4:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Mot.dat';     _sObj_iMax:= sMot.iMax;     _sObj_iSize:=     sMot.iSize; 
	 5:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Safe.dat';    _sObj_iMax:= sSafe.iMax;    _sObj_iSize:=     sSafe.iSize;
	 6:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Dso.dat';     _sObj_iMax:= sDso.iMax;     _sObj_iSize:=     sDso.iSize; 
     7:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Vlv.dat';     _sObj_iMax:= sVlv.iMax;     _sObj_iSize:=     sVlv.iSize;
end_case;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Чтение уставок из ПЛК *) 
  if iSets.nSetsRead then
    iSets.resFileWrite:= WriteReal2DimArray(_fileName, dSetsData[i].Data);
  end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Сброс операций *)
  iSets.nSetsRead:= false; iSets.nSetsWrite:= false;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Перезагрузка программы ПЛК - Запись в ПЛК всех уставок *)
  if nPrgModify then iSets.operCode:= 20000; end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
  _operCodeN:= -1;
(* Расшифровка кода операции *)  
  if iSets.operCode<>0 then 
    iSets.nSetsRead := ANY_TO_DINT(iSets.operCode)>=10000 and ANY_TO_DINT(iSets.operCode)<20000;
    iSets.nSetsWrite:= ANY_TO_DINT(iSets.operCode)>=20000;
	if    iSets.nSetsRead  then
	  _operCodeN:= ANY_TO_DINT(iSets.operCode)-(ANY_TO_DINT(iSets.operCode)/10000)*10000;
	elsif iSets.nSetsWrite then
	  _operCodeN:= ANY_TO_DINT(iSets.operCode)-(ANY_TO_DINT(iSets.operCode)/20000)*20000;
	end_if; 
  (* проверка диапазона объектов *)
    if _operCodeN<0 or _operCodeN>_sObj_iMax or _operCodeN>500 then _operCodeN:= -1; end_if; 
	iSets.nSetsRead := iSets.nSetsRead  & _operCodeN>=0;
	iSets.nSetsWrite:= iSets.nSetsWrite & _operCodeN>=0;
  (* диапазон объектов *) 
	if    _operCodeN=0 then 	(* считать все *)
	  _sObj_iMin:= 1;
	elsif _operCodeN>0 then 	(* считать только один объект *)
	  _sObj_iMin := _operCodeN;
	  _sObj_iSize:= _operCodeN;
    end_if; 
	iSets.operCode:= 0;
  end_if; 
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Запись уставок в ПЛК *) 
  if iSets.nSetsWrite then
    iSets.resFileRead :=  ReadReal2DimArray(_fileName, dSetsData[i].Data);
  end_if; 
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Передача Команд по объектам *)
  if iSets.nSetsRead or iSets.nSetsWrite then
    j:= _sObj_iMin;   while j<=_sObj_iSize do 
      case i of 
	   1:    _fileName:= 'rubbish.dat';     _sObj_iMax:= 1;     _sObj_iSize:=     1;
  	   2:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Ana.dat';     _sObj_iMax:= sAna.iMax;     _sObj_iSize:=     sAna.iSize;
	   3:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Dsc.dat';     _sObj_iMax:= sDsc.iMax;     _sObj_iSize:=     sDsc.iSize;
	   4:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Mot.dat';     _sObj_iMax:= sMot.iMax;     _sObj_iSize:=     sMot.iSize; 
	   5:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Safe.dat';    _sObj_iMax:= sSafe.iMax;    _sObj_iSize:=     sSafe.iSize;
	   6:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Dso.dat';     _sObj_iMax:= sDso.iMax;     _sObj_iSize:=     sDso.iSize; 
       7:    _fileName:= 'sets'+ANY_TO_STRING(nIdnLink)+'Vlv.dat';     _sObj_iMax:= sVlv.iMax;     _sObj_iSize:=     sVlv.iSize;
	  end_case;
    j:= j+1; end_while;
  end_if; 	
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Конец логики *)
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Передача из Рабочего объекта *)
  dSets[i]:= iSets;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Отключение резевных объектов *)
end_if;
i:= i+1; end_while;
END_FUNCTION
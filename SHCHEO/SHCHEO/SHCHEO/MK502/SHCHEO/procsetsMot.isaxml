<?xml version="1.0" encoding="utf-8"?>
<Pou FileVersion="200.00.003" Name="procsetsMot" ElementGuid="6e50dca5-44ae-4914-8c03-489181782bce" Comment="" SingleTextLine="" Language="ST" CustomFbd="0" Localization="Prj" GroupName="(User defined)" GenDebugInfo="false" UseResPassword="true" GenerateSymbMon="true" Is1499="false">
  <Function IdentifierNb="0" Keyword="" ConvDirection="NoConversion" DataType="DINT" />
  <LocalVars>
    <Variable Name="procsetsMot" DataType="DINT" InitialValue="" Comment="" Address="" Modifier="Constant" Kind="VarOutput" Alias="" AccessRights="Write" StringSize="0" Direction="Output" CommentFields="" Attributes="23825" />
    <Variable Name="i" DataType="DINT" InitialValue="" Comment="Счётчик" Address="" Modifier="NonRetain" Kind="Var" Alias="" AccessRights="ReadWrite" StringSize="0" RetainFlags="" CommentFields="" Attributes="0" GroupName="" />
  </LocalVars>
  <PouBody><![CDATA[FUNCTION procmessMot
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Name                Data Type      Dimension            Direction  Attribute       Comment                         *)
(* ------------------------------------------------------------------------------------------------------------------ *)
(* procsetsMot         BOOL                                VarOutput  Write           Результат выполнения функции *)
(* ------------------------------------------------------------------------------------------------------------------ *)
procsetsMot:= sMot.iSize;
if sMot.iSize>sMot.iMax then procsetsMot:= -sMot.iSize; return; end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Проход по всем параметрам *)
i:= 1;   while i<=sMot.iSize do
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Отключение резевных объектов *)
if not dMot[i].nLogicNot then
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Передача в Рабочий объект *)
  iMot:= dMot[i];
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Чтение уставок *)
  if iMot.nSetsRead then
    dSetsData[sMot.Idn].Data[i, 01] := ANY_TO_REAL (iMot.tTimer1)/10.0;                   (* Т01 Срабатывание эл. цепей <сек.> *)
    dSetsData[sMot.Idn].Data[i, 02] := ANY_TO_REAL (iMot.tTimer2)/10.0;                   (* Т02 Выход на Рабочий режим <сек.> *)
    dSetsData[sMot.Idn].Data[i, 03] := ANY_TO_REAL (iMot.tTimer3)/10.0;                   (* Т03 Контроль Рабочего режима в работе <сек.> *)
    dSetsData[sMot.Idn].Data[i, 04] := ANY_TO_REAL (iMot.tTimer11)/10.0;                  (* Т11 Авт. управл. оборуд. на входе <сек.> *)
    dSetsData[sMot.Idn].Data[i, 05] := ANY_TO_REAL (iMot.tTimer12)/10.0;                  (* Т12 Авт. управл. оборуд. на выходе <сек.> *)
    dSetsData[sMot.Idn].Data[i, 06] := ANY_TO_REAL (iMot.tEnableSet);                     (* Флаги включения уставок *)
  end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Запись уставок *)
  if iMot.nSetsWrite then
    iMot.tTimer1                    := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 01]*10.0);(* Т01 Срабатывание эл. цепей <сек.> *)
    iMot.tTimer2                    := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 02]*10.0);(* Т02 Выход на Рабочий режим <сек.> *)
    iMot.tTimer3                    := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 03]*10.0);(* Т03 Контроль Рабочего режима в работе <сек.> *)
    iMot.tTimer11                   := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 04]*10.0);(* Т11 Авт. управл. оборуд. на входе <сек.> *)
    iMot.tTimer12                   := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 05]*10.0);(* Т12 Авт. управл. оборуд. на выходе <сек.> *)
    iMot.tEnableSet                 := ANY_TO_WORD (dSetsData[sMot.Idn].Data[i, 06]);     (* Флаги включения уставок *)
  end_if;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Передача из Рабочего объекта *)
  dMot[i]:= iMot;
(* ------------------------------------------------------------------------------------------------------------------ *)
(* Отключение резевных объектов *)
end_if;
i:= i+1; end_while;
END_FUNCTION
]]></PouBody>
  <PouUIProperties>
    <Root Version="7">
  <LanguageContainerStyle CommentTextColor="Green" CommentFont="Courier New, 10pt" PonctuationTextColor="Black" PonctuationFont="Courier New, 10pt" IdentifierTextColor="Black" IdentifierFont="Courier New, 10pt" OperatorTextColor="Black" OperatorFont="Courier New, 10pt" ReservedWordTextColor="Fuchsia" ReservedWordFont="Courier New, 10pt" PouTextColor="BlueViolet" PouFont="Courier New, 10pt" NumberTextColor="Firebrick" NumberFont="Courier New, 10pt" StringTextColor="Gray" StringFont="Courier New, 10pt" EditorTextAreaBackgroundColor="White" EditorFont="Courier New, 10pt" Index="0" />
</Root>
  </PouUIProperties>
</Pou>